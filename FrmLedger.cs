using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace RewardAssured
{
    public partial class FrmLedger : Form
    {
        private BindingSource bindingSource = new BindingSource();
        private SqlDataAdapter dataAdapter = new SqlDataAdapter();
        private BindingSource bindingSourceA = new BindingSource();
        private SqlDataAdapter dataAdapterA = new SqlDataAdapter();
        public FrmLedger()
        {
            InitializeComponent();
        }

        private void FrmLedger_Load(object sender, EventArgs e)
        {
            DGrid.DataSource = bindingSource;
            DGridSummary.DataSource = bindingSourceA;

          //  DeleteHTMTempFiles();

            MyModules.applyGridTheme(DGridSummary);
            MyModules.applyGridTheme(DGrid);
            DGridSummary.ReadOnly = true;
            DGrid.ReadOnly = true;
            LoadClientBalances();
        }

        private void LoadClientBalances()
        {
            try
            {
                SqlConnection cnSQL = new SqlConnection(MyModules.strConnect);
                SqlCommand cmSQL = new SqlCommand();
                cmSQL.Connection = cnSQL;
                cnSQL.Open();
                cmSQL.Parameters.Clear();
                cmSQL.CommandText = "SELECT [ClientRefNo],[ClientDetails],SUM([ValueOfService]) AS [Value Of Service], SUM([AmountPaidForServices]) AS [Amount Paid For Services],SUM([Reward]) AS [Reward Earned], SUM([AmountDrawnFromReward]) AS [Amount Drawn From Reward],SUM(RewardGeneratedByClient) AS [Reward Generated By Client],SUM([Reward])-SUM([AmountDrawnFromReward]) AS [Reward Balance] FROM [Ledger] GROUP BY  [ClientRefNo],[ClientDetails] ORDER BY [ClientRefNo]";
                cmSQL.CommandType = CommandType.Text;
                dataAdapterA = new SqlDataAdapter(cmSQL);
                SqlCommandBuilder commandBuilder = new SqlCommandBuilder(dataAdapterA);
                DataTable tableA = new DataTable();
                tableA.Locale = System.Globalization.CultureInfo.InvariantCulture;
                dataAdapterA.Fill(tableA);
                bindingSourceA.DataSource = tableA;

                DataGridViewCellStyle myStyle = new DataGridViewCellStyle();
                DataGridViewCellStyle myStyle1 = new DataGridViewCellStyle();
               myStyle1.Format = "N2";
                myStyle.Format = "N2";
                myStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                myStyle1.Alignment = DataGridViewContentAlignment.MiddleRight;
                myStyle1.BackColor = Color.WhiteSmoke;
                DGridSummary.Columns["ClientRefNo"].Width = 100;
                DGridSummary.Columns["ClientDetails"].Width = 170;
                DGridSummary.Columns[2].Width = 100;
                DGridSummary.Columns[3].Width = 100;
                DGridSummary.Columns[4].Width = 100;
                DGridSummary.Columns[5].Width = 100;
                DGridSummary.Columns[6].Width = 120;
                DGridSummary.Columns[7].Width = 100;
                DGridSummary.Columns[2].DefaultCellStyle=myStyle;
                DGridSummary.Columns[3].DefaultCellStyle = myStyle;
                DGridSummary.Columns[4].DefaultCellStyle = myStyle;
                DGridSummary.Columns[5].DefaultCellStyle = myStyle;
                DGridSummary.Columns[6].DefaultCellStyle = myStyle;
                DGridSummary.Columns[7].DefaultCellStyle = myStyle1;
                cnSQL.Close();

                LoadDetails("-899");

                return;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, MyModules.strApptitle, MessageBoxButtons.OK, MessageBoxIcon.Error);

            }
        }

        private void LoadDetails(string ClientCode)
        {
            try
            {
                SqlConnection cnSQL = new SqlConnection(MyModules.strConnect);
                SqlCommand cmSQL = new SqlCommand();

                cmSQL.Connection = cnSQL;
                cnSQL.Open();
                cmSQL.Parameters.Clear();
                cmSQL.CommandText = "SELECT [RefNo],[TransDate],[ValueOfService] AS [Value Of Service],[AmountPaidForServices] AS [Amount Paid For Services],[Reward] AS [Reward Earned],[AmountDrawnFromReward] AS [Amount Drawn From Reward],RewardGeneratedByClient AS [Reward Generated By Client],[Source] ,[SourceRefNo] ,[Particulars] FROM [Transactions] WHERE [ClientRefNo]='" + ClientCode + "' ORDER BY TRansDate";
                cmSQL.CommandType = CommandType.Text;
                dataAdapter = new SqlDataAdapter(cmSQL);
                SqlCommandBuilder commandBuilder = new SqlCommandBuilder(dataAdapter);
                DataTable table = new DataTable();
                table.Locale = System.Globalization.CultureInfo.InvariantCulture;
                dataAdapter.Fill(table);
                bindingSource.DataSource = table;

                //DGrid.Columns(5).Width = 250

                DataGridViewCellStyle myStyle = new DataGridViewCellStyle();
                myStyle.Format = "N2";
                myStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
              
                DGrid.Columns[2].DefaultCellStyle = myStyle;
                DGrid.Columns[3].DefaultCellStyle = myStyle;
                DGrid.Columns[4].DefaultCellStyle = myStyle;
                DGrid.Columns[5].DefaultCellStyle = myStyle;
                DGrid.Columns[6].DefaultCellStyle = myStyle;
                cmSQL.Dispose();
                cnSQL.Close();
                return;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, MyModules.strApptitle, MessageBoxButtons.OK, MessageBoxIcon.Error);

            }
        }

        private void DGridSummary_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void DGridSummary_DoubleClick(object sender, EventArgs e)
        {
            if (Convert.ToInt16(this.Tag) != 0)
            {
                LoadDetails(this.Tag.ToString());
            }
        }

        private void DGridSummary_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            try
            {
                this.Tag = "";
                this.Tag = DGridSummary[0, e.RowIndex].Value;
                DGridSummary.Tag = DGridSummary[1, e.RowIndex].Value;
            }
            catch
            {

            }
        }
    }
}
